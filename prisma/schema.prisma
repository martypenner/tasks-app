datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  tasks    Task[]
  Project  Project[]
  Area     Area[]
  Heading  Heading[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Task {
  id          String    @id @default(cuid())
  title       String
  notes       String?   @default("")
  when        String    @default("inbox")
  whenDate    DateTime?
  status      String    @default("in-progress")
  globalOrder BigInt    @unique @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  Project   Project? @relation(fields: [projectId], references: [id])
  projectId String?

  Area   Area?   @relation(fields: [areaId], references: [id])
  areaId String?

  Heading   Heading? @relation(fields: [headingId], references: [id])
  headingId String?
}

model Project {
  id          String    @id @default(cuid())
  title       String
  notes       String?   @default("")
  when        String    @default("inbox")
  whenDate    DateTime?
  done        Boolean   @default(false)
  tasks       Task[]
  globalOrder BigInt    @unique @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  Area   Area?   @relation(fields: [areaId], references: [id])
  areaId String?

  Headings Heading[]
}

model Area {
  id          String @id @default(cuid())
  title       String
  tasks       Task[]
  globalOrder BigInt @unique @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  Project Project[]
}

model Heading {
  id          String @id @default(cuid())
  title       String
  globalOrder BigInt @unique @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  archived  DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  Task Task[]

  Project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
}
